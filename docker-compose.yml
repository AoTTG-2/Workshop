services:
  workshop:
    build:
      context: .
      dockerfile: /docker/workshop/Dockerfile
    container_name: workshop
    ports:
      - '${SERVER_PORT_OUT:-8080}:${SERVER_PORT:-8080}'
    volumes:
      - ./migrations/postgres:/migrations/postgres
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
    env_file:
      - .env
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 500M

  postgres:
    image: postgres:alpine
    container_name: workshop_postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    shm_size: 128mb
    ports:
      - '${POSTGRES_PORT_OUT:-5432}:5432'
    environment:
      POSTGRES_USER: '${POSTGRES_USERNAME:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-12345}'
      POSTGRES_DB: '${POSTGRES_DATABASE:-postgres}'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 2s
      timeout: 60s
      retries: 15
      start_period: 80s
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 500M

  migrate:
    image: migrate/migrate
    container_name: workshop_migrate
    command: [
      "-path", "/migrations/postgres",
      "-database", "postgres://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-12345}@postgres:5432/${POSTGRES_DATABASE:-workshop}?${POSTGRES_PARAMS:-sslmode=disable}",
      "up"
    ]
    volumes:
      - ./migrations/postgres:/migrations/postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default

  redis:
    image: redis:alpine
    container_name: workshop_redis
    ports:
      - '${REDIS_PORT_OUT:-6379}:${REDIS_PORT:-6379}'
    command: redis-server --save 20 1 --loglevel warning
    env_file:
      - .env
    networks:
      - default

  swagger_ui:
    container_name: workshop_swagger_ui
    image: swaggerapi/swagger-ui
    ports:
      - '${SWAGGER_PORT_OUT:-14000}:8080'
    environment:
      - SWAGGER_JSON=/docs/swagger.json
    volumes:
      - ./docs/:/docs

  demo:
    build:
      context: .
      dockerfile: ./docker/workshop-demo/Dockerfile
      args:
        - VITE_WORKSHOP_HOST=http://localhost:${SERVER_PORT_OUT:-8080}
    container_name: workshop_demo
    ports:
      - '${DEMO_PORT_OUT:-14001}:80'
    depends_on:
      - workshop
    networks:
      - default

networks:
  default:
    name: workshop_network
    driver: bridge

volumes:
  pg_data:
